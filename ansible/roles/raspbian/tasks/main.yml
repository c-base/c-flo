---
# These tasks installs the base system

- name: Install basic system utilities
  become: yes
  become_user: root
  apt: name={{ item }} state=present update_cache=yes
  with_items:
    - vim
    - htop
    - tmux
    - screen
    - sudo
    - xorg
    - xinit
    - i3
    - python3-gi
#    - gir1.2-webkit-3.0
#    - libwebkitgtk-3.0-dev
#    - git-core
    - python3-pip
    - libnss3-tools
    - curl
    - chromium-browser
    - tzdata
    - python-pexpect

#- name: Download git repo
#  become: yes
#  become_user: "{{ display_user }}"
#  git:
#    repo: "{{ repository }}"
#    dest: "{{ project_root }}"
#    version: master
#  args:
#    accept_hostkey: yes
#  notify:
#        - Restart lightdm
#  tags: git, config
#  register: git

# - name: Install pip requirements
#   become: yes
#   become_user: "{{ display_user }}"
#   pip:
#     requirements: "{{ project_root }}/requirements.txt"
#     executable: pip3
#     state: present
#     extra_args: --user
#   tags: pip

# - name: Upload config.py file.
#   become: yes
#   become_user: root
#   template: src=config.py dest=/home/{{ display_user }}/mqttwebview/config.py mode=0644 owner={{ display_user }}
#   notify:
#     - Restart lightdm
#   tags: config

# This is necessary because you will get the Error:
# certutil: function failed: security library: bad database
# https://serverfault.com/questions/414578/certutil-function-failed-security-library-bad-database
- name: Create directory for cert database
  become: yes
  become_user: "{{ display_user }}"
  file: path=/home/{{ display_user }}/.pki/nssdb state=directory

- name: Prepare cert directory
  become: yes
  become_user: "{{ display_user }}"
  expect:
      command: /usr/bin/certutil -d /home/{{ display_user }}/.pki/nssdb -N
      responses:
        Enter Password or Pin for "NSS Certificate DB": ""
        Enter new password: ""
        Re-enter password: ""
  creates: /home/{{ display_user }}/.pki/nssdb/cert8.db

- name: Load cacert root certs
  become: Yes
  become_user: "{{ display_user }}"
  shell: curl -k -o "cacert-root.crt" "http://www.cacert.org/certs/root.crt" && curl -k -o "cacert-class3.crt" "http://www.cacert.org/certs/class3.crt" && certutil -d sql:$HOME/.pki/nssdb -A -t TC -n "CAcert.org" -i cacert-root.crt && certutil -d sql:$HOME/.pki/nssdb -A -t TC -n "CAcert.org Class 3" -i cacert-class3.crt
  args:
      chdir: "/home/{{ display_user }}/"

- name: Upload chromium defaults.
#  copy: src=chromium-defaults/ dest=/home/{{ display_user }}/chromium-defaults directory_mode=yes
  become: yes
  become_user: root
  synchronize:
    src: chromium-defaults/
    dest: /home/{{ display_user }}/chromium-defaults

- name: Upload run_chromium.sh file
  become: yes
  become_user: root
  template: src=run_chromium.sh dest=/home/{{ display_user }}/run_chromium.sh mode=0744 owner={{ display_user }}
  tags: config,bla
  notify:
    - Restart display-manager

- name: Set the timezone
  become: yes
  become_user: root
  template: src=timezone.txt dest=/etc/timezone mode=0644 owner=root
  tags: config,bla
  notify:
    - Reconfigure time zone
    - Restart display-manager
  

